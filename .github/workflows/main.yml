name: CI-CD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Autenticando o usuÃ¡rio no DOCKER HUB
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PWD }}
          
      - name: Docker Build and Push -> Construindo a imagem e enviando para o Docker Hub (Registry)
        uses: docker/build-push-action@v3.0.0
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            luismartorano/kubenewsv1:latest
            luismartorano/kubenewsv1:${{ github.run_number }} 
  CD:
    needs: [CI]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: engineerd/setup-kind@v0.5.0
        with:
          wait: "60s"

      - name: Testing
        run: |
          kind get kubeconfig
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=90s
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
          kubectl apply -f https://kind.sigs.k8s.io/examples/loadbalancer/metallb-configmap.yaml

      #- name: Kubernetes set context -> Incluindo o Kube config do context
      #  uses: Azure/k8s-set-context@v2
      #  with:
      #    method: kubeconfig
      #    kubeconfig: ${{ secrets.K8S_CONFIG }}
      #
      #- name: Deploy para o Cluster Kubernetes
      #  uses: Azure/k8s-deploy@v3.1
      #  with: 
      #    images: luismartorano/kubenewsv1:${{ github.run_number }}
      #    manifests: |
      #      k8s/deployment.yaml
      #    
      